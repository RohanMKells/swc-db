#
# Copyright (C) 2019 SWC-DB (author: Kashirin Alex (kashirin.alex@gmail.com))
#




SET_DEPS(NAME "ZLIB"  REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libz.a SHARED z INCLUDE zlib.h)
#INSTALL_LIBS(lib ${ZLIB_LIBRARIES_SHARED})

SET_DEPS(NAME "BZIP2" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libbz2.a SHARED bz2 INCLUDE bzlib.h)
#INSTALL_LIBS(lib ${BZIP2_LIBRARIES_SHARED})

SET_DEPS(NAME "LZMA"  REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC liblzma.a SHARED lzma INCLUDE lzma.h)
#INSTALL_LIBS(lib ${LZMA_LIBRARIES_SHARED})

SET_DEPS(NAME "ZSTD"  REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libzstd.a SHARED zstd INCLUDE zstd.h)
#INSTALL_LIBS(lib ${ZSTD_LIBRARIES_SHARED})

SET_DEPS(NAME "SNAPPY" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libsnappy.a SHARED snappy INCLUDE snappy.h)
#INSTALL_LIBS(lib ${SNAPPY_LIBRARIES_SHARED})

SET_DEPS(NAME "LZ4" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC liblz4.a SHARED lz4 INCLUDE lz4.h)
#INSTALL_LIBS(lib ${LZ4_LIBRARIES_SHARED})

SET_DEPS(NAME "RE2" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libre2.a SHARED re2 INCLUDE re2/re2.h)
#INSTALL_LIBS(lib ${RE2_LIBRARIES_SHARED})

SET_DEPS(
	NAME "SSL" 
	REQUIRED TRUE 
	LIB_PATHS /usr/local/ssl/lib
	INC_PATHS /usr/local/ssl/include
	STATIC libssl.a libcrypto.a 
	SHARED ssl crypto
	INCLUDE openssl/ssl.h openssl/crypto.h
)
#INSTALL_LIBS(lib ${SSL_LIBRARIES_SHARED})


if(FALSE)
SET_DEPS(NAME "EXPAT" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libexpat.a SHARED expat INCLUDE expat.h)
# INSTALL_LIBS(lib ${EXPAT_LIBRARIES_SHARED})

SET_DEPS(NAME "EVENT" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libevent.a SHARED event INCLUDE event.h)
#INSTALL_LIBS(lib ${EVENT_LIBRARIES_SHARED})
SET_DEPS(NAME "WANGLE" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libwangle.a SHARED wangle INCLUDE wangle)
SET_DEPS(NAME "FOLLY"  REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libfolly.a  SHARED folly  INCLUDE folly)
SET_DEPS(NAME "FIZZ"   REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libfizz.a   SHARED fizz   INCLUDE fizz)
SET_DEPS(NAME "DOUBLE_CONVERSION" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libdouble-conversion.a SHARED double-conversion INCLUDE double-conversion/double-conversion.h)
SET_DEPS(NAME "GLOG"   REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libglog.a   SHARED glog   INCLUDE glog)
SET_DEPS(NAME "GFLAGS" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libgflags.a SHARED gflags INCLUDE gflags)

SET_DEPS(NAME "AIO" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libaio.a SHARED aio INCLUDE )
SET_DEPS(NAME "SODIUM" REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC libsodium.a SHARED sodium INCLUDE sodium)
#INSTALL_LIBS(lib ${SODIUM_LIBRARIES_SHARED})

SET_DEPS(NAME "RT"  REQUIRED TRUE LIB_PATHS "" INC_PATHS "" STATIC librt.a SHARED rt INCLUDE )
SET_DEPS(NAME "SSP" REQUIRED TRUE LIB_PATHS "" INC_PATHS "/usr/local/lib/gcc/x86_64-ubuntu-linux-gnu/8.3.0/include" STATIC libssp.a SHARED ssp INCLUDE ssp/ssp.h)


set(WANGLE_LIBRARIES_SHARED 
    ${WANGLE_LIBRARIES_SHARED} 
    ${FIZZ_LIBRARIES_SHARED}
    ${FOLLY_LIBRARIES_SHARED} 
    ${GLOG_LIBRARIES_SHARED}
    ${GFLAGS_LIBRARIES_SHARED}
    ${DOUBLE_CONVERSION_LIBRARIES_SHARED} 
    ${BOOST_WANGLE_LIBRARIES_SHARED}
    ${SSL_LIBRARIES_SHARED}
    ${ZLIB_LIBRARIES_SHARED}
    ${BZIP2_LIBRARIES_SHARED}
    ${LZMA_LIBRARIES_SHARED}
    ${SNAPPY_LIBRARIES_SHARED}
    ${ZSTD_LIBRARIES_SHARED}
    ${LZ4_LIBRARIES_SHARED}
    ${EVENT_LIBRARIES_SHARED}
    ${SODIUM_LIBRARIES_SHARED}
    ${AIO_LIBRARIES_SHARED}

    ${SSP_LIBRARIES_SHARED}
    ${RT_LIBRARIES_SHARED}
)
set(WANGLE_LIBRARIES_STATIC 
    ${WANGLE_LIBRARIES_STATIC} 
    ${FIZZ_LIBRARIES_STATIC} 
    ${FOLLY_LIBRARIES_STATIC} 
    ${GLOG_LIBRARIES_STATIC}
    ${GFLAGS_LIBRARIES_STATIC}
    ${DOUBLE_CONVERSION_LIBRARIES_STATIC} 
    ${BOOST_WANGLE_LIBRARIES_STATIC}
    ${SSL_LIBRARIES_STATIC}
    ${ZLIB_LIBRARIES_STATIC}
    ${BZIP2_LIBRARIES_STATIC}
    ${LZMA_LIBRARIES_STATIC}
    ${SNAPPY_LIBRARIES_STATIC}
    ${ZSTD_LIBRARIES_STATIC}
    ${LZ4_LIBRARIES_STATIC}
    ${EVENT_LIBRARIES_STATIC}
    ${SODIUM_LIBRARIES_STATIC}
    ${AIO_LIBRARIES_STATIC}

    ${SSP_LIBRARIES_STATIC}
    ${RT_LIBRARIES_STATIC}
)
endif()





# find_package(Doxygen)

# 
# INSTALL_LIBS(lib  ${EVENT_LIBRARIES_SHARED})
# find_package(Thrift REQUIRED)


# find_package(Editline REQUIRED)


# find_package(Libssh REQUIRED)



# find_package(Cronolog REQUIRED)
# find_package(RRDtool REQUIRED)
