/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef SERVICE_TYPES_H
#define SERVICE_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>
/* custom thrift includes */

/* begin types */

enum _ColumnMng {
  COLUMN_MNG_CREATE = 3,
  COLUMN_MNG_DELETE = 5,
  COLUMN_MNG_MODIFY = 7
};
typedef enum _ColumnMng ColumnMng;

/* return the name of the constant */
const char *
toString_ColumnMng(int value); 

enum _ColumnType {
  COLUMN_TYPE_UNKNOWN = 0,
  COLUMN_TYPE_PLAIN = 1,
  COLUMN_TYPE_COUNTER_I64 = 2,
  COLUMN_TYPE_COUNTER_I32 = 3,
  COLUMN_TYPE_COUNTER_I16 = 4,
  COLUMN_TYPE_COUNTER_I8 = 5,
  COLUMN_TYPE_CELL_DEFINED = 15
};
typedef enum _ColumnType ColumnType;

/* return the name of the constant */
const char *
toString_ColumnType(int value); 

enum _EncodingType {
  ENCODING_TYPE_DEFAULT = 0,
  ENCODING_TYPE_PLAIN = 1,
  ENCODING_TYPE_ZLIB = 2,
  ENCODING_TYPE_SNAPPY = 3
};
typedef enum _EncodingType EncodingType;

/* return the name of the constant */
const char *
toString_EncodingType(int value); 

enum _Flag {
  FLAG_NONE = 0,
  FLAG_INSERT = 1,
  FLAG_DELETE = 2,
  FLAG_DELETE_VERSION = 3
};
typedef enum _Flag Flag;

/* return the name of the constant */
const char *
toString_Flag(int value); 

enum _CellsResult {
  CELLS_RESULT_IN_LIST = 0,
  CELLS_RESULT_ON_COLUMN = 1,
  CELLS_RESULT_ON_KEY = 2,
  CELLS_RESULT_ON_FRACTION = 3
};
typedef enum _CellsResult CellsResult;

/* return the name of the constant */
const char *
toString_CellsResult(int value); 

typedef GPtrArray Schemas;

typedef GPtrArray Key;

typedef GPtrArray UCells;

typedef GHashTable UCCells;

typedef GPtrArray Cells;

typedef GPtrArray ColCells;

typedef GHashTable CCells;

typedef GPtrArray KCells;

typedef GPtrArray CompactResults;

struct _Exception
{ 
  ThriftStruct parent; 

  /* public */
  gint32 code;
  gboolean __isset_code;
  gchar * message;
  gboolean __isset_message;
};
typedef struct _Exception Exception;

struct _ExceptionClass
{
  ThriftStructClass parent;
};
typedef struct _ExceptionClass ExceptionClass;

GType exception_get_type (void);
#define TYPE_EXCEPTION (exception_get_type())
#define EXCEPTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_EXCEPTION, Exception))
#define EXCEPTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_EXCEPTION, ExceptionClass))
#define IS_EXCEPTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_EXCEPTION))
#define IS_EXCEPTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_EXCEPTION))
#define EXCEPTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_EXCEPTION, ExceptionClass))

/* exception */
typedef enum
{
  EXCEPTION_ERROR_CODE
} ExceptionError;

GQuark exception_error_quark (void);
#define EXCEPTION_ERROR (exception_error_quark())


/* struct Schema */
struct _Schema
{ 
  ThriftStruct parent; 

  /* public */
  gint64 cid;
  gboolean __isset_cid;
  gchar * col_name;
  gboolean __isset_col_name;
  ColumnType col_type;
  gboolean __isset_col_type;
  gint32 cell_versions;
  gboolean __isset_cell_versions;
  gint32 cell_ttl;
  gboolean __isset_cell_ttl;
  EncodingType blk_encoding;
  gboolean __isset_blk_encoding;
  gint32 blk_size;
  gboolean __isset_blk_size;
  gint32 blk_cells;
  gboolean __isset_blk_cells;
  gint8 cs_replication;
  gboolean __isset_cs_replication;
  gint32 cs_size;
  gboolean __isset_cs_size;
  gint8 cs_max;
  gboolean __isset_cs_max;
  gint8 compact_percent;
  gboolean __isset_compact_percent;
  gint64 revision;
  gboolean __isset_revision;
};
typedef struct _Schema Schema;

struct _SchemaClass
{
  ThriftStructClass parent;
};
typedef struct _SchemaClass SchemaClass;

GType schema_get_type (void);
#define TYPE_SCHEMA (schema_get_type())
#define SCHEMA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SCHEMA, Schema))
#define SCHEMA_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SCHEMA, SchemaClass))
#define IS_SCHEMA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SCHEMA))
#define IS_SCHEMA_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SCHEMA))
#define SCHEMA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SCHEMA, SchemaClass))

/* struct UCell */
struct _UCell
{ 
  ThriftStruct parent; 

  /* public */
  Flag f;
  gboolean __isset_f;
  GPtrArray * k;
  gboolean __isset_k;
  gint64 ts;
  gboolean __isset_ts;
  GByteArray * v;
  gboolean __isset_v;
};
typedef struct _UCell UCell;

struct _UCellClass
{
  ThriftStructClass parent;
};
typedef struct _UCellClass UCellClass;

GType u_cell_get_type (void);
#define TYPE_U_CELL (u_cell_get_type())
#define U_CELL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_U_CELL, UCell))
#define U_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_U_CELL, UCellClass))
#define IS_U_CELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_U_CELL))
#define IS_U_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_U_CELL))
#define U_CELL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_U_CELL, UCellClass))

/* struct Cell */
struct _Cell
{ 
  ThriftStruct parent; 

  /* public */
  gchar * c;
  gboolean __isset_c;
  GPtrArray * k;
  gboolean __isset_k;
  gint64 ts;
  gboolean __isset_ts;
  GByteArray * v;
  gboolean __isset_v;
};
typedef struct _Cell Cell;

struct _CellClass
{
  ThriftStructClass parent;
};
typedef struct _CellClass CellClass;

GType cell_get_type (void);
#define TYPE_CELL (cell_get_type())
#define CELL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CELL, Cell))
#define CELL_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CELL, CellClass))
#define IS_CELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CELL))
#define IS_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CELL))
#define CELL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CELL, CellClass))

/* struct CCell */
struct _CCell
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * k;
  gboolean __isset_k;
  gint64 ts;
  gboolean __isset_ts;
  GByteArray * v;
  gboolean __isset_v;
};
typedef struct _CCell CCell;

struct _CCellClass
{
  ThriftStructClass parent;
};
typedef struct _CCellClass CCellClass;

GType c_cell_get_type (void);
#define TYPE_C_CELL (c_cell_get_type())
#define C_CELL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_C_CELL, CCell))
#define C_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_C_CELL, CCellClass))
#define IS_C_CELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_C_CELL))
#define IS_C_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_C_CELL))
#define C_CELL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_C_CELL, CCellClass))

/* struct KCell */
struct _KCell
{ 
  ThriftStruct parent; 

  /* public */
  gchar * c;
  gboolean __isset_c;
  gint64 ts;
  gboolean __isset_ts;
  GByteArray * v;
  gboolean __isset_v;
};
typedef struct _KCell KCell;

struct _KCellClass
{
  ThriftStructClass parent;
};
typedef struct _KCellClass KCellClass;

GType k_cell_get_type (void);
#define TYPE_K_CELL (k_cell_get_type())
#define K_CELL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_K_CELL, KCell))
#define K_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_K_CELL, KCellClass))
#define IS_K_CELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_K_CELL))
#define IS_K_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_K_CELL))
#define K_CELL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_K_CELL, KCellClass))

/* struct kCells */
struct _kCells
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * k;
  gboolean __isset_k;
  GPtrArray * cells;
  gboolean __isset_cells;
};
typedef struct _kCells kCells;

struct _kCellsClass
{
  ThriftStructClass parent;
};
typedef struct _kCellsClass kCellsClass;

GType k_cells_get_type (void);
#define TYPE_K_CELLS (k_cells_get_type())
#define K_CELLS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_K_CELLS, kCells))
#define K_CELLS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_K_CELLS, kCellsClass))
#define IS_K_CELLS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_K_CELLS))
#define IS_K_CELLS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_K_CELLS))
#define K_CELLS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_K_CELLS, kCellsClass))

/* struct FCell */
struct _FCell
{ 
  ThriftStruct parent; 

  /* public */
  gchar * c;
  gboolean __isset_c;
  gint64 ts;
  gboolean __isset_ts;
  GByteArray * v;
  gboolean __isset_v;
};
typedef struct _FCell FCell;

struct _FCellClass
{
  ThriftStructClass parent;
};
typedef struct _FCellClass FCellClass;

GType f_cell_get_type (void);
#define TYPE_F_CELL (f_cell_get_type())
#define F_CELL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_F_CELL, FCell))
#define F_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_F_CELL, FCellClass))
#define IS_F_CELL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_F_CELL))
#define IS_F_CELL_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_F_CELL))
#define F_CELL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_F_CELL, FCellClass))

/* struct FCells */
struct _FCells
{ 
  ThriftStruct parent; 

  /* public */
  GHashTable * f;
  gboolean __isset_f;
  GPtrArray * cells;
  gboolean __isset_cells;
};
typedef struct _FCells FCells;

struct _FCellsClass
{
  ThriftStructClass parent;
};
typedef struct _FCellsClass FCellsClass;

GType f_cells_get_type (void);
#define TYPE_F_CELLS (f_cells_get_type())
#define F_CELLS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_F_CELLS, FCells))
#define F_CELLS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_F_CELLS, FCellsClass))
#define IS_F_CELLS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_F_CELLS))
#define IS_F_CELLS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_F_CELLS))
#define F_CELLS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_F_CELLS, FCellsClass))

/* struct CellsGroup */
struct _CellsGroup
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * cells;
  gboolean __isset_cells;
  GHashTable * ccells;
  gboolean __isset_ccells;
  GPtrArray * kcells;
  gboolean __isset_kcells;
  FCells * fcells;
  gboolean __isset_fcells;
};
typedef struct _CellsGroup CellsGroup;

struct _CellsGroupClass
{
  ThriftStructClass parent;
};
typedef struct _CellsGroupClass CellsGroupClass;

GType cells_group_get_type (void);
#define TYPE_CELLS_GROUP (cells_group_get_type())
#define CELLS_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CELLS_GROUP, CellsGroup))
#define CELLS_GROUP_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CELLS_GROUP, CellsGroupClass))
#define IS_CELLS_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CELLS_GROUP))
#define IS_CELLS_GROUP_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CELLS_GROUP))
#define CELLS_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CELLS_GROUP, CellsGroupClass))

/* struct CompactResult */
struct _CompactResult
{ 
  ThriftStruct parent; 

  /* public */
  gint64 cid;
  gboolean __isset_cid;
  gint32 err;
  gboolean __isset_err;
};
typedef struct _CompactResult CompactResult;

struct _CompactResultClass
{
  ThriftStructClass parent;
};
typedef struct _CompactResultClass CompactResultClass;

GType compact_result_get_type (void);
#define TYPE_COMPACT_RESULT (compact_result_get_type())
#define COMPACT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_COMPACT_RESULT, CompactResult))
#define COMPACT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_COMPACT_RESULT, CompactResultClass))
#define IS_COMPACT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_COMPACT_RESULT))
#define IS_COMPACT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_COMPACT_RESULT))
#define COMPACT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_COMPACT_RESULT, CompactResultClass))

/* constants */

/* struct ServiceSqlMngColumnArgs */
struct _ServiceSqlMngColumnArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
};
typedef struct _ServiceSqlMngColumnArgs ServiceSqlMngColumnArgs;

struct _ServiceSqlMngColumnArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlMngColumnArgsClass ServiceSqlMngColumnArgsClass;

GType service_sql_mng_column_args_get_type (void);
#define TYPE_SERVICE_SQL_MNG_COLUMN_ARGS (service_sql_mng_column_args_get_type())
#define SERVICE_SQL_MNG_COLUMN_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_MNG_COLUMN_ARGS, ServiceSqlMngColumnArgs))
#define SERVICE_SQL_MNG_COLUMN_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_MNG_COLUMN_ARGS, ServiceSqlMngColumnArgsClass))
#define IS_SERVICE_SQL_MNG_COLUMN_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_MNG_COLUMN_ARGS))
#define IS_SERVICE_SQL_MNG_COLUMN_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_MNG_COLUMN_ARGS))
#define SERVICE_SQL_MNG_COLUMN_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_MNG_COLUMN_ARGS, ServiceSqlMngColumnArgsClass))

/* struct ServiceSqlMngColumnResult */
struct _ServiceSqlMngColumnResult
{ 
  ThriftStruct parent; 

  /* public */
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlMngColumnResult ServiceSqlMngColumnResult;

struct _ServiceSqlMngColumnResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlMngColumnResultClass ServiceSqlMngColumnResultClass;

GType service_sql_mng_column_result_get_type (void);
#define TYPE_SERVICE_SQL_MNG_COLUMN_RESULT (service_sql_mng_column_result_get_type())
#define SERVICE_SQL_MNG_COLUMN_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_MNG_COLUMN_RESULT, ServiceSqlMngColumnResult))
#define SERVICE_SQL_MNG_COLUMN_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_MNG_COLUMN_RESULT, ServiceSqlMngColumnResultClass))
#define IS_SERVICE_SQL_MNG_COLUMN_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_MNG_COLUMN_RESULT))
#define IS_SERVICE_SQL_MNG_COLUMN_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_MNG_COLUMN_RESULT))
#define SERVICE_SQL_MNG_COLUMN_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_MNG_COLUMN_RESULT, ServiceSqlMngColumnResultClass))

/* struct ServiceSqlListColumnsArgs */
struct _ServiceSqlListColumnsArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
};
typedef struct _ServiceSqlListColumnsArgs ServiceSqlListColumnsArgs;

struct _ServiceSqlListColumnsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlListColumnsArgsClass ServiceSqlListColumnsArgsClass;

GType service_sql_list_columns_args_get_type (void);
#define TYPE_SERVICE_SQL_LIST_COLUMNS_ARGS (service_sql_list_columns_args_get_type())
#define SERVICE_SQL_LIST_COLUMNS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_LIST_COLUMNS_ARGS, ServiceSqlListColumnsArgs))
#define SERVICE_SQL_LIST_COLUMNS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_LIST_COLUMNS_ARGS, ServiceSqlListColumnsArgsClass))
#define IS_SERVICE_SQL_LIST_COLUMNS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_LIST_COLUMNS_ARGS))
#define IS_SERVICE_SQL_LIST_COLUMNS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_LIST_COLUMNS_ARGS))
#define SERVICE_SQL_LIST_COLUMNS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_LIST_COLUMNS_ARGS, ServiceSqlListColumnsArgsClass))

/* struct ServiceSqlListColumnsResult */
struct _ServiceSqlListColumnsResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlListColumnsResult ServiceSqlListColumnsResult;

struct _ServiceSqlListColumnsResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlListColumnsResultClass ServiceSqlListColumnsResultClass;

GType service_sql_list_columns_result_get_type (void);
#define TYPE_SERVICE_SQL_LIST_COLUMNS_RESULT (service_sql_list_columns_result_get_type())
#define SERVICE_SQL_LIST_COLUMNS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_LIST_COLUMNS_RESULT, ServiceSqlListColumnsResult))
#define SERVICE_SQL_LIST_COLUMNS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_LIST_COLUMNS_RESULT, ServiceSqlListColumnsResultClass))
#define IS_SERVICE_SQL_LIST_COLUMNS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_LIST_COLUMNS_RESULT))
#define IS_SERVICE_SQL_LIST_COLUMNS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_LIST_COLUMNS_RESULT))
#define SERVICE_SQL_LIST_COLUMNS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_LIST_COLUMNS_RESULT, ServiceSqlListColumnsResultClass))

/* struct ServiceSqlCompactColumnsArgs */
struct _ServiceSqlCompactColumnsArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
};
typedef struct _ServiceSqlCompactColumnsArgs ServiceSqlCompactColumnsArgs;

struct _ServiceSqlCompactColumnsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlCompactColumnsArgsClass ServiceSqlCompactColumnsArgsClass;

GType service_sql_compact_columns_args_get_type (void);
#define TYPE_SERVICE_SQL_COMPACT_COLUMNS_ARGS (service_sql_compact_columns_args_get_type())
#define SERVICE_SQL_COMPACT_COLUMNS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_COMPACT_COLUMNS_ARGS, ServiceSqlCompactColumnsArgs))
#define SERVICE_SQL_COMPACT_COLUMNS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_COMPACT_COLUMNS_ARGS, ServiceSqlCompactColumnsArgsClass))
#define IS_SERVICE_SQL_COMPACT_COLUMNS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_COMPACT_COLUMNS_ARGS))
#define IS_SERVICE_SQL_COMPACT_COLUMNS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_COMPACT_COLUMNS_ARGS))
#define SERVICE_SQL_COMPACT_COLUMNS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_COMPACT_COLUMNS_ARGS, ServiceSqlCompactColumnsArgsClass))

/* struct ServiceSqlCompactColumnsResult */
struct _ServiceSqlCompactColumnsResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlCompactColumnsResult ServiceSqlCompactColumnsResult;

struct _ServiceSqlCompactColumnsResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlCompactColumnsResultClass ServiceSqlCompactColumnsResultClass;

GType service_sql_compact_columns_result_get_type (void);
#define TYPE_SERVICE_SQL_COMPACT_COLUMNS_RESULT (service_sql_compact_columns_result_get_type())
#define SERVICE_SQL_COMPACT_COLUMNS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_COMPACT_COLUMNS_RESULT, ServiceSqlCompactColumnsResult))
#define SERVICE_SQL_COMPACT_COLUMNS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_COMPACT_COLUMNS_RESULT, ServiceSqlCompactColumnsResultClass))
#define IS_SERVICE_SQL_COMPACT_COLUMNS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_COMPACT_COLUMNS_RESULT))
#define IS_SERVICE_SQL_COMPACT_COLUMNS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_COMPACT_COLUMNS_RESULT))
#define SERVICE_SQL_COMPACT_COLUMNS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_COMPACT_COLUMNS_RESULT, ServiceSqlCompactColumnsResultClass))

/* struct ServiceSqlSelectArgs */
struct _ServiceSqlSelectArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
};
typedef struct _ServiceSqlSelectArgs ServiceSqlSelectArgs;

struct _ServiceSqlSelectArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlSelectArgsClass ServiceSqlSelectArgsClass;

GType service_sql_select_args_get_type (void);
#define TYPE_SERVICE_SQL_SELECT_ARGS (service_sql_select_args_get_type())
#define SERVICE_SQL_SELECT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_SELECT_ARGS, ServiceSqlSelectArgs))
#define SERVICE_SQL_SELECT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_SELECT_ARGS, ServiceSqlSelectArgsClass))
#define IS_SERVICE_SQL_SELECT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_SELECT_ARGS))
#define IS_SERVICE_SQL_SELECT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_SELECT_ARGS))
#define SERVICE_SQL_SELECT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_SELECT_ARGS, ServiceSqlSelectArgsClass))

/* struct ServiceSqlSelectResult */
struct _ServiceSqlSelectResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlSelectResult ServiceSqlSelectResult;

struct _ServiceSqlSelectResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlSelectResultClass ServiceSqlSelectResultClass;

GType service_sql_select_result_get_type (void);
#define TYPE_SERVICE_SQL_SELECT_RESULT (service_sql_select_result_get_type())
#define SERVICE_SQL_SELECT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_SELECT_RESULT, ServiceSqlSelectResult))
#define SERVICE_SQL_SELECT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_SELECT_RESULT, ServiceSqlSelectResultClass))
#define IS_SERVICE_SQL_SELECT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_SELECT_RESULT))
#define IS_SERVICE_SQL_SELECT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_SELECT_RESULT))
#define SERVICE_SQL_SELECT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_SELECT_RESULT, ServiceSqlSelectResultClass))

/* struct ServiceSqlSelectRsltOnColumnArgs */
struct _ServiceSqlSelectRsltOnColumnArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
};
typedef struct _ServiceSqlSelectRsltOnColumnArgs ServiceSqlSelectRsltOnColumnArgs;

struct _ServiceSqlSelectRsltOnColumnArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlSelectRsltOnColumnArgsClass ServiceSqlSelectRsltOnColumnArgsClass;

GType service_sql_select_rslt_on_column_args_get_type (void);
#define TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS (service_sql_select_rslt_on_column_args_get_type())
#define SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS, ServiceSqlSelectRsltOnColumnArgs))
#define SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS, ServiceSqlSelectRsltOnColumnArgsClass))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS))
#define SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_ARGS, ServiceSqlSelectRsltOnColumnArgsClass))

/* struct ServiceSqlSelectRsltOnColumnResult */
struct _ServiceSqlSelectRsltOnColumnResult
{ 
  ThriftStruct parent; 

  /* public */
  GHashTable * success;
  gboolean __isset_success;
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlSelectRsltOnColumnResult ServiceSqlSelectRsltOnColumnResult;

struct _ServiceSqlSelectRsltOnColumnResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlSelectRsltOnColumnResultClass ServiceSqlSelectRsltOnColumnResultClass;

GType service_sql_select_rslt_on_column_result_get_type (void);
#define TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT (service_sql_select_rslt_on_column_result_get_type())
#define SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT, ServiceSqlSelectRsltOnColumnResult))
#define SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT, ServiceSqlSelectRsltOnColumnResultClass))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT))
#define SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_COLUMN_RESULT, ServiceSqlSelectRsltOnColumnResultClass))

/* struct ServiceSqlSelectRsltOnKeyArgs */
struct _ServiceSqlSelectRsltOnKeyArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
};
typedef struct _ServiceSqlSelectRsltOnKeyArgs ServiceSqlSelectRsltOnKeyArgs;

struct _ServiceSqlSelectRsltOnKeyArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlSelectRsltOnKeyArgsClass ServiceSqlSelectRsltOnKeyArgsClass;

GType service_sql_select_rslt_on_key_args_get_type (void);
#define TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS (service_sql_select_rslt_on_key_args_get_type())
#define SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS, ServiceSqlSelectRsltOnKeyArgs))
#define SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS, ServiceSqlSelectRsltOnKeyArgsClass))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS))
#define SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_ARGS, ServiceSqlSelectRsltOnKeyArgsClass))

/* struct ServiceSqlSelectRsltOnKeyResult */
struct _ServiceSqlSelectRsltOnKeyResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlSelectRsltOnKeyResult ServiceSqlSelectRsltOnKeyResult;

struct _ServiceSqlSelectRsltOnKeyResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlSelectRsltOnKeyResultClass ServiceSqlSelectRsltOnKeyResultClass;

GType service_sql_select_rslt_on_key_result_get_type (void);
#define TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT (service_sql_select_rslt_on_key_result_get_type())
#define SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT, ServiceSqlSelectRsltOnKeyResult))
#define SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT, ServiceSqlSelectRsltOnKeyResultClass))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT))
#define SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_KEY_RESULT, ServiceSqlSelectRsltOnKeyResultClass))

/* struct ServiceSqlSelectRsltOnFractionArgs */
struct _ServiceSqlSelectRsltOnFractionArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
};
typedef struct _ServiceSqlSelectRsltOnFractionArgs ServiceSqlSelectRsltOnFractionArgs;

struct _ServiceSqlSelectRsltOnFractionArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlSelectRsltOnFractionArgsClass ServiceSqlSelectRsltOnFractionArgsClass;

GType service_sql_select_rslt_on_fraction_args_get_type (void);
#define TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS (service_sql_select_rslt_on_fraction_args_get_type())
#define SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS, ServiceSqlSelectRsltOnFractionArgs))
#define SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS, ServiceSqlSelectRsltOnFractionArgsClass))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS))
#define SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_ARGS, ServiceSqlSelectRsltOnFractionArgsClass))

/* struct ServiceSqlSelectRsltOnFractionResult */
struct _ServiceSqlSelectRsltOnFractionResult
{ 
  ThriftStruct parent; 

  /* public */
  FCells * success;
  gboolean __isset_success;
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlSelectRsltOnFractionResult ServiceSqlSelectRsltOnFractionResult;

struct _ServiceSqlSelectRsltOnFractionResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlSelectRsltOnFractionResultClass ServiceSqlSelectRsltOnFractionResultClass;

GType service_sql_select_rslt_on_fraction_result_get_type (void);
#define TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT (service_sql_select_rslt_on_fraction_result_get_type())
#define SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT, ServiceSqlSelectRsltOnFractionResult))
#define SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT, ServiceSqlSelectRsltOnFractionResultClass))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT))
#define IS_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT))
#define SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_SELECT_RSLT_ON_FRACTION_RESULT, ServiceSqlSelectRsltOnFractionResultClass))

/* struct ServiceSqlQueryArgs */
struct _ServiceSqlQueryArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
  CellsResult rslt;
  gboolean __isset_rslt;
};
typedef struct _ServiceSqlQueryArgs ServiceSqlQueryArgs;

struct _ServiceSqlQueryArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlQueryArgsClass ServiceSqlQueryArgsClass;

GType service_sql_query_args_get_type (void);
#define TYPE_SERVICE_SQL_QUERY_ARGS (service_sql_query_args_get_type())
#define SERVICE_SQL_QUERY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_QUERY_ARGS, ServiceSqlQueryArgs))
#define SERVICE_SQL_QUERY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_QUERY_ARGS, ServiceSqlQueryArgsClass))
#define IS_SERVICE_SQL_QUERY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_QUERY_ARGS))
#define IS_SERVICE_SQL_QUERY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_QUERY_ARGS))
#define SERVICE_SQL_QUERY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_QUERY_ARGS, ServiceSqlQueryArgsClass))

/* struct ServiceSqlQueryResult */
struct _ServiceSqlQueryResult
{ 
  ThriftStruct parent; 

  /* public */
  CellsGroup * success;
  gboolean __isset_success;
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlQueryResult ServiceSqlQueryResult;

struct _ServiceSqlQueryResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlQueryResultClass ServiceSqlQueryResultClass;

GType service_sql_query_result_get_type (void);
#define TYPE_SERVICE_SQL_QUERY_RESULT (service_sql_query_result_get_type())
#define SERVICE_SQL_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_QUERY_RESULT, ServiceSqlQueryResult))
#define SERVICE_SQL_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_QUERY_RESULT, ServiceSqlQueryResultClass))
#define IS_SERVICE_SQL_QUERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_QUERY_RESULT))
#define IS_SERVICE_SQL_QUERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_QUERY_RESULT))
#define SERVICE_SQL_QUERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_QUERY_RESULT, ServiceSqlQueryResultClass))

/* struct ServiceSqlUpdateArgs */
struct _ServiceSqlUpdateArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * sql;
  gboolean __isset_sql;
  gint64 updater_id;
  gboolean __isset_updater_id;
};
typedef struct _ServiceSqlUpdateArgs ServiceSqlUpdateArgs;

struct _ServiceSqlUpdateArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlUpdateArgsClass ServiceSqlUpdateArgsClass;

GType service_sql_update_args_get_type (void);
#define TYPE_SERVICE_SQL_UPDATE_ARGS (service_sql_update_args_get_type())
#define SERVICE_SQL_UPDATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_UPDATE_ARGS, ServiceSqlUpdateArgs))
#define SERVICE_SQL_UPDATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_UPDATE_ARGS, ServiceSqlUpdateArgsClass))
#define IS_SERVICE_SQL_UPDATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_UPDATE_ARGS))
#define IS_SERVICE_SQL_UPDATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_UPDATE_ARGS))
#define SERVICE_SQL_UPDATE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_UPDATE_ARGS, ServiceSqlUpdateArgsClass))

/* struct ServiceSqlUpdateResult */
struct _ServiceSqlUpdateResult
{ 
  ThriftStruct parent; 

  /* public */
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceSqlUpdateResult ServiceSqlUpdateResult;

struct _ServiceSqlUpdateResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceSqlUpdateResultClass ServiceSqlUpdateResultClass;

GType service_sql_update_result_get_type (void);
#define TYPE_SERVICE_SQL_UPDATE_RESULT (service_sql_update_result_get_type())
#define SERVICE_SQL_UPDATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_SQL_UPDATE_RESULT, ServiceSqlUpdateResult))
#define SERVICE_SQL_UPDATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_SQL_UPDATE_RESULT, ServiceSqlUpdateResultClass))
#define IS_SERVICE_SQL_UPDATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_SQL_UPDATE_RESULT))
#define IS_SERVICE_SQL_UPDATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_SQL_UPDATE_RESULT))
#define SERVICE_SQL_UPDATE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_SQL_UPDATE_RESULT, ServiceSqlUpdateResultClass))

/* struct ServiceUpdaterCreateArgs */
struct _ServiceUpdaterCreateArgs
{ 
  ThriftStruct parent; 

  /* public */
  gint32 buffer_size;
  gboolean __isset_buffer_size;
};
typedef struct _ServiceUpdaterCreateArgs ServiceUpdaterCreateArgs;

struct _ServiceUpdaterCreateArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceUpdaterCreateArgsClass ServiceUpdaterCreateArgsClass;

GType service_updater_create_args_get_type (void);
#define TYPE_SERVICE_UPDATER_CREATE_ARGS (service_updater_create_args_get_type())
#define SERVICE_UPDATER_CREATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_UPDATER_CREATE_ARGS, ServiceUpdaterCreateArgs))
#define SERVICE_UPDATER_CREATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_UPDATER_CREATE_ARGS, ServiceUpdaterCreateArgsClass))
#define IS_SERVICE_UPDATER_CREATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_UPDATER_CREATE_ARGS))
#define IS_SERVICE_UPDATER_CREATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_UPDATER_CREATE_ARGS))
#define SERVICE_UPDATER_CREATE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_UPDATER_CREATE_ARGS, ServiceUpdaterCreateArgsClass))

/* struct ServiceUpdaterCreateResult */
struct _ServiceUpdaterCreateResult
{ 
  ThriftStruct parent; 

  /* public */
  gint64 success;
  gboolean __isset_success;
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceUpdaterCreateResult ServiceUpdaterCreateResult;

struct _ServiceUpdaterCreateResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceUpdaterCreateResultClass ServiceUpdaterCreateResultClass;

GType service_updater_create_result_get_type (void);
#define TYPE_SERVICE_UPDATER_CREATE_RESULT (service_updater_create_result_get_type())
#define SERVICE_UPDATER_CREATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_UPDATER_CREATE_RESULT, ServiceUpdaterCreateResult))
#define SERVICE_UPDATER_CREATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_UPDATER_CREATE_RESULT, ServiceUpdaterCreateResultClass))
#define IS_SERVICE_UPDATER_CREATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_UPDATER_CREATE_RESULT))
#define IS_SERVICE_UPDATER_CREATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_UPDATER_CREATE_RESULT))
#define SERVICE_UPDATER_CREATE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_UPDATER_CREATE_RESULT, ServiceUpdaterCreateResultClass))

/* struct ServiceUpdaterCloseArgs */
struct _ServiceUpdaterCloseArgs
{ 
  ThriftStruct parent; 

  /* public */
  gint64 id;
  gboolean __isset_id;
};
typedef struct _ServiceUpdaterCloseArgs ServiceUpdaterCloseArgs;

struct _ServiceUpdaterCloseArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceUpdaterCloseArgsClass ServiceUpdaterCloseArgsClass;

GType service_updater_close_args_get_type (void);
#define TYPE_SERVICE_UPDATER_CLOSE_ARGS (service_updater_close_args_get_type())
#define SERVICE_UPDATER_CLOSE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_UPDATER_CLOSE_ARGS, ServiceUpdaterCloseArgs))
#define SERVICE_UPDATER_CLOSE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_UPDATER_CLOSE_ARGS, ServiceUpdaterCloseArgsClass))
#define IS_SERVICE_UPDATER_CLOSE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_UPDATER_CLOSE_ARGS))
#define IS_SERVICE_UPDATER_CLOSE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_UPDATER_CLOSE_ARGS))
#define SERVICE_UPDATER_CLOSE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_UPDATER_CLOSE_ARGS, ServiceUpdaterCloseArgsClass))

/* struct ServiceUpdaterCloseResult */
struct _ServiceUpdaterCloseResult
{ 
  ThriftStruct parent; 

  /* public */
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceUpdaterCloseResult ServiceUpdaterCloseResult;

struct _ServiceUpdaterCloseResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceUpdaterCloseResultClass ServiceUpdaterCloseResultClass;

GType service_updater_close_result_get_type (void);
#define TYPE_SERVICE_UPDATER_CLOSE_RESULT (service_updater_close_result_get_type())
#define SERVICE_UPDATER_CLOSE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_UPDATER_CLOSE_RESULT, ServiceUpdaterCloseResult))
#define SERVICE_UPDATER_CLOSE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_UPDATER_CLOSE_RESULT, ServiceUpdaterCloseResultClass))
#define IS_SERVICE_UPDATER_CLOSE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_UPDATER_CLOSE_RESULT))
#define IS_SERVICE_UPDATER_CLOSE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_UPDATER_CLOSE_RESULT))
#define SERVICE_UPDATER_CLOSE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_UPDATER_CLOSE_RESULT, ServiceUpdaterCloseResultClass))

/* struct ServiceUpdateArgs */
struct _ServiceUpdateArgs
{ 
  ThriftStruct parent; 

  /* public */
  GHashTable * cells;
  gboolean __isset_cells;
  gint64 updater_id;
  gboolean __isset_updater_id;
};
typedef struct _ServiceUpdateArgs ServiceUpdateArgs;

struct _ServiceUpdateArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceUpdateArgsClass ServiceUpdateArgsClass;

GType service_update_args_get_type (void);
#define TYPE_SERVICE_UPDATE_ARGS (service_update_args_get_type())
#define SERVICE_UPDATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_UPDATE_ARGS, ServiceUpdateArgs))
#define SERVICE_UPDATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_UPDATE_ARGS, ServiceUpdateArgsClass))
#define IS_SERVICE_UPDATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_UPDATE_ARGS))
#define IS_SERVICE_UPDATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_UPDATE_ARGS))
#define SERVICE_UPDATE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_UPDATE_ARGS, ServiceUpdateArgsClass))

/* struct ServiceUpdateResult */
struct _ServiceUpdateResult
{ 
  ThriftStruct parent; 

  /* public */
  Exception * e;
  gboolean __isset_e;
};
typedef struct _ServiceUpdateResult ServiceUpdateResult;

struct _ServiceUpdateResultClass
{
  ThriftStructClass parent;
};
typedef struct _ServiceUpdateResultClass ServiceUpdateResultClass;

GType service_update_result_get_type (void);
#define TYPE_SERVICE_UPDATE_RESULT (service_update_result_get_type())
#define SERVICE_UPDATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERVICE_UPDATE_RESULT, ServiceUpdateResult))
#define SERVICE_UPDATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SERVICE_UPDATE_RESULT, ServiceUpdateResultClass))
#define IS_SERVICE_UPDATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERVICE_UPDATE_RESULT))
#define IS_SERVICE_UPDATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SERVICE_UPDATE_RESULT))
#define SERVICE_UPDATE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERVICE_UPDATE_RESULT, ServiceUpdateResultClass))

#endif /* SERVICE_TYPES_H */
