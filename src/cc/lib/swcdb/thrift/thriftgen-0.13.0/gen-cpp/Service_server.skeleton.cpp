// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "Service.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using namespace  ::SWC::Thrift;

class ServiceHandler : virtual public ServiceIf {
 public:
  ServiceHandler() {
    // Your initialization goes here
  }

  void sql_mng_column(const std::string& sql) {
    // Your implementation goes here
    printf("sql_mng_column\n");
  }

  void sql_list_columns(Schemas& _return, const std::string& sql) {
    // Your implementation goes here
    printf("sql_list_columns\n");
  }

  void sql_select_list(Cells& _return, const std::string& sql) {
    // Your implementation goes here
    printf("sql_select_list\n");
  }

  void sql_select_map(ColumnsMapCells& _return, const std::string& sql) {
    // Your implementation goes here
    printf("sql_select_map\n");
  }

  void sql_select_keys(KeysCells& _return, const std::string& sql) {
    // Your implementation goes here
    printf("sql_select_keys\n");
  }

  void sql_select_fraction(FractionCells& _return, const std::string& sql) {
    // Your implementation goes here
    printf("sql_select_fraction\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  ::std::shared_ptr<ServiceHandler> handler(new ServiceHandler());
  ::std::shared_ptr<TProcessor> processor(new ServiceProcessor(handler));
  ::std::shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  ::std::shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  ::std::shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

